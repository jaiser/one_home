<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                    http://www.springframework.org/schema/context
                    http://www.springframework.org/schema/context/spring-context-3.1.xsd
                    http://www.springframework.org/schema/mvc
                    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.oneHome.controller" />

    <!-- 开启SpringMVC注解模式 -->
    <mvc:annotation-driven/>
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" />   <!-- JSON转换器 -->
            </list>
        </property>
    </bean>
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/html/" />
        <property name="suffix" value=".html" />
    </bean>
    <!--这里是对静态资源的映射 -->
    <mvc:resources mapping="/static/**" location="/WEB-INF/static/" />
    <!--<mvc:resources mapping="/js/**" location="WEB-INF/static/js/" />-->
    <!--<mvc:resources mapping="/css/**" location="WEB-INF/static/css/" />-->
    <!--<mvc:resources mapping="/img/**" location="WEB-INF/static/img/" />-->

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <!--<bean id="multipartResolver"-->
          <!--class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
        <!--&lt;!&ndash; 默认编码 &ndash;&gt;-->
        <!--<property name="defaultEncoding" value="utf-8" />-->
        <!--&lt;!&ndash; 文件大小最大值 &ndash;&gt;-->
        <!--<property name="maxUploadSize" value="10485760000" />-->
        <!--&lt;!&ndash; 内存中的最大值 &ndash;&gt;-->
        <!--<property name="maxInMemorySize" value="40960" />-->
    <!--</bean>-->

    <!-- 拦截器 -->
    <!--<mvc:interceptors>-->
        <!-- 多个拦截器，顺序执行 -->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<mvc:mapping path="/tenant/tenantLogOut.action"/>-->
            <!--&lt;!&ndash;<mvc:mapping path="/sysManagerLogin.do"/>&ndash;&gt;-->
            <!--<mvc:exclude-mapping path="/*.do"/>-->
            <!--<mvc:exclude-mapping path="/static/**" />-->
            <!--<mvc:exclude-mapping path="/tenant/**.do" />-->
            <!--<mvc:exclude-mapping path="/tenant/**.htm" />-->
            <!--<mvc:exclude-mapping path="/utils/**" />-->
            <!--<bean class="houses.jaiser.Utils.LoginInterceptor"></bean>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->

</beans>
